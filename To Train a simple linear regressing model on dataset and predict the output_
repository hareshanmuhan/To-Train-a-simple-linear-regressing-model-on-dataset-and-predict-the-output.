{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNvqtXk6vwmdgZ6RneRHccG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":63,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QE0B-EGmQSY-","executionInfo":{"status":"ok","timestamp":1697120711042,"user_tz":-330,"elapsed":6022,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}},"outputId":"37b4425b-7453-48b8-fe3b-df57b3f91345"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.2.2)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3.post1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.23.5)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.11.3)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.2.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n"]}],"source":["!pip install pandas scikit-learn"]},{"cell_type":"code","source":["import numpy as nm\n","import matplotlib.pyplot as mtp\n","import pandas as pd"],"metadata":{"id":"rgOPShlYZHV7","executionInfo":{"status":"ok","timestamp":1697120711043,"user_tz":-330,"elapsed":50,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["data_set_1= pd.read_csv('/content/Traindataset.csv')\n","data_set_2= pd.read_csv('/content/Testdataset.csv')"],"metadata":{"id":"f0ztM5yxFgee","executionInfo":{"status":"ok","timestamp":1697120711043,"user_tz":-330,"elapsed":47,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["x= data_set_1.iloc[:, :-1].values\n","y= data_set_1.iloc[:, 1].values\n","\n","x= data_set_2.iloc[:, :-1].values\n","y= data_set_2.iloc[:, 1].values"],"metadata":{"id":"ai45xI88F3NZ","executionInfo":{"status":"ok","timestamp":1697120711044,"user_tz":-330,"elapsed":46,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 1/3, random_state=0)"],"metadata":{"id":"ZTiLSe17F7v4","executionInfo":{"status":"ok","timestamp":1697120711044,"user_tz":-330,"elapsed":46,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","data_set_1 = pd.read_csv('/content/Traindataset.csv')\n","x1 = data_set_1.iloc[:, :-1].values\n","y1 = data_set_1.iloc[:, 1].values\n","\n","data_set_2 = pd.read_csv('/content/Testdataset.csv')\n","x2 = data_set_2.iloc[:, :-1].values\n","y2 = data_set_2.iloc[:, 1].values\n","\n","x1_train, x1_test, y1_train, y1_test = train_test_split(x1, y1, test_size=1/3, random_state=0)\n","\n","x2_train, x2_test, y2_train, y2_test = train_test_split(x2, y2, test_size=1/3, random_state=0)\n"],"metadata":{"id":"gYSojWMRGCip","executionInfo":{"status":"ok","timestamp":1697120711045,"user_tz":-330,"elapsed":44,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["\n","data_set_1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"l0tTRiA8Sc5q","executionInfo":{"status":"ok","timestamp":1697120951371,"user_tz":-330,"elapsed":497,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}},"outputId":"a779e752-815f-4155-ea6c-51d5a546f2e7"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       24  21.54945196\n","0    50.0    47.464463\n","1    15.0    17.218656\n","2    38.0    36.586398\n","3    87.0    87.288984\n","4    36.0    32.463875\n","..    ...          ...\n","694  58.0    58.595006\n","695  93.0    94.625094\n","696  82.0    88.603770\n","697  66.0    63.648685\n","698  97.0    94.975266\n","\n","[699 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-8df4c7d4-ae93-410f-80fc-59c93de51cc4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>24</th>\n","      <th>21.54945196</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50.0</td>\n","      <td>47.464463</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>17.218656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38.0</td>\n","      <td>36.586398</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>87.0</td>\n","      <td>87.288984</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>36.0</td>\n","      <td>32.463875</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>694</th>\n","      <td>58.0</td>\n","      <td>58.595006</td>\n","    </tr>\n","    <tr>\n","      <th>695</th>\n","      <td>93.0</td>\n","      <td>94.625094</td>\n","    </tr>\n","    <tr>\n","      <th>696</th>\n","      <td>82.0</td>\n","      <td>88.603770</td>\n","    </tr>\n","    <tr>\n","      <th>697</th>\n","      <td>66.0</td>\n","      <td>63.648685</td>\n","    </tr>\n","    <tr>\n","      <th>698</th>\n","      <td>97.0</td>\n","      <td>94.975266</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>699 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8df4c7d4-ae93-410f-80fc-59c93de51cc4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8df4c7d4-ae93-410f-80fc-59c93de51cc4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8df4c7d4-ae93-410f-80fc-59c93de51cc4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a84ce9f0-939f-4512-9cba-a60c18ca1c42\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a84ce9f0-939f-4512-9cba-a60c18ca1c42')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a84ce9f0-939f-4512-9cba-a60c18ca1c42 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","mae = mean_absolute_error(y_test, y_pred)\n","\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Mean Absolute Error:\", mae)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RMNRiIXCOPqE","executionInfo":{"status":"ok","timestamp":1697120711046,"user_tz":-330,"elapsed":40,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}},"outputId":"21aee5e0-c296-4da4-bc4d-2fe17f79b188"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error: 11.707495195475353\n","R-squared: 0.9873355442221037\n","Mean Absolute Error: 2.673829241889406\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.scatter(y_test, y_pred)\n","plt.xlabel(\"Actual Values\")\n","plt.ylabel(\"Predicted Values\")\n","plt.title(\"Actual vs. Predicted Values\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"2qV5oZXLO1Iq","executionInfo":{"status":"ok","timestamp":1697120711047,"user_tz":-330,"elapsed":37,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}},"outputId":"9e5165f6-6f17-478e-cbe7-c62d0ceca64a"},"execution_count":70,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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1SpERERg0aJFFc6tX78eGzZswOLFixEUFIS4uDicOHHC5v1spT7q1KmDvLy8CsfPnz+PJk2amL7/6quv0KRJE6xfv97sfuUXGMvRt29fPPfcc6ZU1unTpzFt2rQK14WFhWHYsGEYNmwYbty4gS5dumDWrFkOBzuOiouLAwCEhITYDJbq1auHoKAgi6m3U6dOSXofR3+nVTVGo+joaDzwwANYt24dpk+fjs2bN2Po0KGmlOf169exZcsWzJ49GzNmzDC9Tmpa0tKfz9u3byMrK8vsWFxcHG7cuCEpiPX390efPn3Qp08fGAwGvPDCC/j4448xffr0CovUieRiGotIglu3bmH9+vV4+OGH8fjjj1f4Gjt2LPLz87Fx40YAQP/+/XH8+HFs2LChwr2EEACAWrVqAYDFoCYuLg779u3D7du3Tce+++47XLx40ew64yyP8Z5AaXlzenq6wz9raGgokpOT8eWXX2LNmjXw9/dH3759za4pX55cu3Zt3HHHHWYzE1qtFr/99ptiKRFr2rVrh7i4OLz99tu4ceNGhfN//fUXgNJnlZycjG+++QYXLlwwnT958iR+/PFHu+9Tmd9pVY2xrNTUVFy5cgXPPfcciouLzVJYlv7cALDZ06isuLg403oboyVLllSY2RkwYADS09Mtjj0vLw8lJSUAKv558vHxwd133w0A1TojR56DMztEEmzcuBH5+fl45JFHLJ6/7777TA0Gn3zySbz00kv46quv8MQTT2D48OFo164dcnNzsXHjRixevBitW7dGXFwcQkNDsXjxYgQHB6NWrVro0KEDYmNj8eyzz+Krr75CSkoKBgwYgHPnzmHlypWmGQKjhx9+GOvXr8djjz2G3r17IzMzE4sXL0Z8fLzFD1WpnnzySQwePBgffvghkpOTERoaanY+Pj4e3bp1Q7t27RAWFoZDhw7hq6++wtixY03XbNiwAcOGDcPy5cuduseUj48PPv30Uzz00ENo0aIFhg0bhvr16+PSpUvYtm0bQkJCsGnTJgDA7NmzkZaWhvvvvx8vvPACSkpK8K9//QstWrSwu+aosr/TqhhjWf3798cLL7yAb7/9FjExMejSpYvpXEhICLp06YI333wTxcXFqF+/Pn766SdTTyN7nn32WTz//PPo378/evbsiePHj+PHH380S3Uan5lxYfTQoUPRrl07FBQU4Jdf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mZgzZ87g5s2bpu/btm2LM2fOICIiAnfccYfZl1qtNl13zz33YNq0adi7dy9atmyJ1atXy/7ZiMgyBjtEJMl3332H69evY8SIEWjZsqXZV//+/U2prJkzZ+KLL77AzJkzcfLkSfzyyy9YsGCB6T6NGzfGzp07cenSJVOw0q1bN/z111948803ce7cOSxatAg//PCD2fs3bdoUn3/+OU6ePIn9+/cjNTXVoVmk2rVr48knn8S0adOQlZWFoUOHmr3H5s2bsXfvXpw8eRLPPfcccnJybN6ve/fu+OCDD3D06FEcOnQIzz//PPz8/EznU1NTER4ejkcffRS7du1CZmYmtm/fjvHjx+PPP/9EZmYmpk2bhvT0dJw/fx4//fQTzpw5w3U7RApisENEkixduhRJSUlmsxFG/fv3x6FDh/Dzzz+jW7duWLduHTZu3Ig2bdqge/fuZtVMr732Gv744w/ExcWZ0jjNmzfHhx9+iEWLFqF169Y4cOCA2UJh4/tfv34dbdu2xdNPP43x48cjIiLCoZ9lxIgRuH79OpKTk81Scv/3f/+Htm3bIjk5Gd26dYNGo0Hfvn1t3uudd95BTEwM7r//fjz11FOYMmUKatasaTpfs2ZN7Ny5Ew0bNkS/fv3QvHlzjBgxAoWFhQgJCUHNmjXx22+/oX///rjzzjsxatQojBkzBs8995xDPxsRVaQS5ZPNRERERB6EMztERETk0RjsEBERkUdjsENEREQejcEOEREReTQGO0REROTRGOwQERGRR2OwQ0RERB6NwQ4RERF5NAY7RERE5NEY7BAREZFHY7BDREREHo3BDhEREXm0/wei9neUN3T6YwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["# Assuming you have a single data point as a scalar\n","new_data_point = 97  # Replace this with your actual value\n","\n","# Make predictions using the single data point\n","new_predictions = regressor.predict(np.array([[new_data_point]]))\n","\n","\n"],"metadata":{"id":"GVj0u7IOQZxT","executionInfo":{"status":"ok","timestamp":1697120988382,"user_tz":-330,"elapsed":587,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["new_predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KmAxnRhHQcqg","executionInfo":{"status":"ok","timestamp":1697120991811,"user_tz":-330,"elapsed":715,"user":{"displayName":"hare shanmuhan","userId":"11773805327502081149"}},"outputId":"7c715c4c-733a-4a60-a80a-ae452afa1775"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([97.45966969])"]},"metadata":{},"execution_count":78}]}]}